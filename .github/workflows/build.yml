name: "Build"

on:
  workflow_dispatch:

  push:
    branches:
      - main
    tags:
      - v*

defaults:
  run:
    shell: bash

jobs:
  build-editor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Voicevox
        uses: actions/checkout@v4
        with:
          repository: "sevenc-nanashi/voicevox"
          ref: "add/vst"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "npm"

      - name: Build
        run: |
          npm install
          npm run vst:build

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: build-editor
          path: dist_vst/voicevox.zip
  build-each:
    needs: build-editor
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            name: "windows"
          - os: macos-latest
            name: "macos"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout VVVST
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Download Editor
        uses: actions/download-artifact@v4
        with:
          name: build-editor
          path: Resources

      - name: Cache CMake
        uses: actions/cache@v4
        with:
          path: build
          key: cmake-${{ matrix.os }}-v1

      - name: Determine Information
        id: determine-information
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if (github.ref_name) {
              core.setOutput('ref_name', github.ref_name);
              core.setOutput('prerelease', github.ref_name.includes("-"));
              core.setOutput('zip_name', `vvvst-${github.ref_name}-${{ matrix.name }}.zip`);
            } else {
              core.setOutput('ref_name', "dev");
              core.setOutput('prerelease', true);
              core.setOutput('zip_name', `vvvst-dev-${{ matrix.name }}.zip`);
            }

      - name: Build
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: Add icon (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          curl https://raw.githubusercontent.com/VOICEVOX/voicevox/main/public/icon.png -L | magick convert - -resize 256x256 build/Vvvst_artefacts/Release/VST3/VVVST.vst3/VVVST.ico
          echo '[.ShellClassInfo]\nIconResource=.\VVVST.ico,0' > build/Vvvst_artefacts/Release/VST3/VVVST.vst3/desktop.ini

      - name: Package
        run: |
          cd build/Vvvst_artefacts/Release/VST3
          7z a -tzip ${{ steps.determine-information.outputs.zip_name }} VVVST.vst3
          cp ${{ steps.determine-information.outputs.zip_name }} ../../../../

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          body: "SHA: ${{ github.sha }}"
          prerelease: ${{ steps.determine-information.outputs.prerelease }}
          files: ${{ steps.determine-information.outputs.zip_name }}
          tag_name: ${{ steps.determine-information.outputs.ref_name }}
